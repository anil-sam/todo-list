{"version":3,"sources":["Components/List.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","style","display","gap","map","type","flex","className","todoList","item","status","padding","margin","border","name","onClick","id","copiedList","prepareList","onStatusChange","editItem","filter","setTask","description","setId","onEdit","deleteItem","onDelete","TodoList","useState","task","localStorage","getItem","JSON","parse","list","setList","useEffect","setItem","stringify","handleChange","e","target","value","placeholder","onChange","addItem","newItems","updatedTime","Date","getHours","getMinutes","getSeconds","taskObj","toISOString","createdTime","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7bafde2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction List(props) {\r\n\r\n    const onDelete = (id) => {\r\n        const deleteItem = [...props.todoList]\r\n        ?.filter(item => item.id !== id)\r\n        props.prepareList(deleteItem)\r\n    }\r\n\r\n    const onEdit = (id) => {\r\n        \r\n        const editItem = [...props.todoList]\r\n        ?.filter(item => item.id === id)[0]\r\n        props.setTask({\r\n            name: editItem?.name,\r\n            description: editItem?.description,\r\n        })\r\n        props.setId(id)\r\n    }\r\n\r\n    const onStatusChange = (id) => {\r\n        const copiedList = [...props?.todoList]\r\n        const status = copiedList.map(item => {\r\n            if(item.id === id) {\r\n                item.status = item.status === 'todo'? 'doing' : 'done'\r\n            }\r\n            return item\r\n        }\r\n        )\r\n        props.prepareList(copiedList)\r\n    }\r\n\r\n    const theList = ['todo', 'doing', 'done']\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: \"20px\" }}>\r\n            {theList.map(type => <div style={{ flex: 1 }} key={type} className={type}>\r\n                {type}\r\n                {props?.todoList?.map((item) => item.status === type &&\r\n                <div style={{ padding: '20px', margin: '20px', border: '1px solid' }} key={item.id}>\r\n                {item.name}\r\n                {item.status !== 'done' && <button onClick={() => onStatusChange(item.id)}>Move</button>}\r\n                {item.status === 'todo' && <button onClick={() => onEdit(item.id)}>Edit</button>}\r\n                <button onClick={() => onDelete(item.id)}>Delete</button>\r\n                <br />\r\n                {item.description} \r\n                </div>)}\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React, {useState, useEffect} from 'react'\r\nimport List from './List'\r\n\r\n\r\nfunction TodoList() {\r\n\tconst [task, setTask] = useState({})\r\n\tconst [list, setList] = useState(localStorage.getItem('list') ? \r\n\tJSON.parse(localStorage.getItem('list')) : [])\r\n\tconst [id, setId] = useState(null)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('list', JSON.stringify(list))\r\n\t}, [list])\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetTask({\r\n\t\t\t...task,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t\t})\t\r\n\t}\r\n\r\n\t\tconst handleClick = () => {\r\n\t\t\tconst addItem = [...list]\r\n\t\t\tif (id) {\r\n\t\t\t\tconst newItems = addItem.map(item => {\r\n\t\t\t\t\tif (item.id === id) {\r\n\t\t\t\t\titem.name = task?.name\r\n\t\t\t\t\titem.description = task?.description\r\n\t\t\t\t\titem.updatedTime = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds()\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item\r\n\t\t\t\t})\r\n\t\t\t\tsetList(newItems)\r\n\t\t\t\tsetId(null)\r\n\t\t\t} else {\r\n\t\t\t\tconst taskObj = {\r\n\t\t\t\t\tid: new Date().toISOString(),\r\n\t\t\t\t\tname: task?.name,\r\n\t\t\t\t\tdescription: task?.description,\r\n\t\t\t\t\tstatus: 'todo',\r\n\t\t\t\t\tcreatedTime: new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds(),\r\n\t\t\t\t\tupdatedTime: new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds()\r\n\t\t\t\t}\r\n\t\t\t\taddItem.push(taskObj)\r\n\t\t\t}\r\n\t\t\tsetList(addItem)\r\n\t\t\tsetTask({\r\n\t\t\t\tname: '',\r\n\t\t\t\tdescription: ''\r\n\t\t\t})\r\n\t\t}\r\n\r\n    return (\r\n        <div>\r\n        <input type='text' name=\"name\" value={task.name} placeholder='Task Name' onChange={handleChange}/>\r\n\t\t<br /><br />\r\n        <input type='text' name=\"description\" value={task.description} placeholder='Description' onChange={handleChange}/>\r\n\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t<button onClick={handleClick}>Submit</button><br /><br />\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\ttodoList={list}\r\n\t\t\t\t\t\tprepareList={setList}\r\n\t\t\t\t\t\tsetTask={setTask}\r\n\t\t\t\t\t\tsetId={setId}\r\n\t\t\t\t\t/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './Components/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}